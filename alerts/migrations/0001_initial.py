# Generated by Django 5.2.6 on 2025-09-24 09:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('monitoring', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du canal')),
                ('channel_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('webhook', 'Webhook'), ('push', 'Notification push'), ('slack', 'Slack'), ('teams', 'Microsoft Teams')], max_length=20)),
                ('configuration', models.JSONField(help_text='Configuration spécifique au canal')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Canal de notification',
                'verbose_name_plural': 'Canaux de notification',
            },
        ),
        migrations.CreateModel(
            name='AlertRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom de la règle')),
                ('description', models.TextField(blank=True)),
                ('trigger_type', models.CharField(choices=[('detection_type', 'Type de détection'), ('severity_level', 'Niveau de gravité'), ('camera', 'Caméra spécifique'), ('zone', 'Zone spécifique'), ('time_window', 'Fenêtre temporelle'), ('confidence_threshold', 'Seuil de confiance')], max_length=20)),
                ('trigger_conditions', models.JSONField(help_text='Conditions de déclenchement')),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.PositiveIntegerField(default=1, help_text='Priorité (1 = plus haute)')),
                ('cooldown_minutes', models.PositiveIntegerField(default=5, help_text='Délai avant nouvelle alerte')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_triggered', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_rules', to='monitoring.location')),
            ],
            options={
                'verbose_name': "Règle d'alerte",
                'verbose_name_plural': "Règles d'alerte",
                'ordering': ['priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name="Titre de l'alerte")),
                ('message', models.TextField(verbose_name='Message')),
                ('priority', models.CharField(choices=[('low', 'Faible'), ('medium', 'Moyenne'), ('high', 'Haute'), ('critical', 'Critique')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('sent', 'Envoyée'), ('acknowledged', 'Accusée de réception'), ('resolved', 'Résolue'), ('failed', 'Échec')], default='pending', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict, help_text='Métadonnées supplémentaires')),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('detection_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='monitoring.detectionevent')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_alerts', to=settings.AUTH_USER_MODEL)),
                ('alert_rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='alerts.alertrule')),
            ],
            options={
                'verbose_name': 'Alerte',
                'verbose_name_plural': 'Alertes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AlertSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_type', models.CharField(choices=[('immediate', 'Immédiat'), ('delayed', 'Différée'), ('recurring', 'Récurrente'), ('conditional', 'Conditionnelle')], default='immediate', max_length=15)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('days_of_week', models.JSONField(default=list, help_text='Jours de la semaine actifs')),
                ('delay_minutes', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('alert_rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='alerts.alertrule')),
            ],
            options={
                'verbose_name': "Planification d'alerte",
                'verbose_name_plural': "Planifications d'alerte",
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipient', models.CharField(help_text='Email, numéro de téléphone, etc.', max_length=255)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('sending', 'Envoi en cours'), ('sent', 'Envoyée'), ('delivered', 'Délivrée'), ('failed', 'Échec'), ('bounced', 'Rejetée')], default='pending', max_length=15)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('external_id', models.CharField(blank=True, help_text='ID externe du service', max_length=255)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('metadata', models.JSONField(default=dict)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='alerts.alert')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='alerts.notificationchannel')),
            ],
            options={
                'verbose_name': 'Journal de notification',
                'verbose_name_plural': 'Journal des notifications',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='AlertRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('priority_filter', models.JSONField(default=list, help_text="Priorités d'alertes à recevoir")),
                ('time_restrictions', models.JSONField(default=dict, help_text='Restrictions horaires')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('channels', models.ManyToManyField(to='alerts.notificationchannel')),
            ],
            options={
                'verbose_name': "Destinataire d'alerte",
                'verbose_name_plural': "Destinataires d'alerte",
                'unique_together': {('user', 'location')},
            },
        ),
    ]
